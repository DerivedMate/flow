{ ~empty: l(Int)  = == 0 l }
{ ~single: l(Int) = == 1 l }
{ ~tree:= 
    [ [1]
    , [ [2]
      , [3]
      , [4]
      ],
      [ [5]
      , [ ]
      , [6]
      ]
    ]
}

{ ~invert: l =
    { l } => { || empty single } 
    | l
    | { l } => map ~invert 
            => {[&0, &2, &1]}                                    
}
{ tree } => ~invert => { <~ Any }
%%
 => [ [1]
    , [ [5]
      , [6]
      , []
      ], 
      [ [2]
      , [4]
      , [3]
      ]
    ]
%%

{ ~sgn: n =
    > n 0 | 1
    < n 0 | -1
          | 0
}
{[121, 0, -12, 5]} => map ~sgn => { <~ List }