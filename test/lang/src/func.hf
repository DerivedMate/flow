{ l(Int). == 0 l }
  => let ~empty
{ l(Int). == 1 l }
  => let ~single
{ 
  [ [1]
  , [ [2]
    , [3]
    , [4]
    ],
    [ [5]
    , [ ]
    , [6]
    ]
  ]
} => let { tree }
{ ~invert l.
    { l } => { || empty single } 
    | l
    | { l } => map ~invert 
            => {[&0, &2, &1]}                                    
} => let ~invert

{ tree } => ~invert => { <~ Any }
%%
 => [ [1]
    , [ [5]
      , [6]
      , []
      ], 
      [ [2]
      , [4]
      , [3]
      ]
    ]
%%

{ n.
    > n 0 | 1
    < n 0 | -1
          | 0
} => let ~sgn
{[121, 0, -12, 5]} => map ~sgn => { <~ [Any] }